pipeline {
     agent { label 'agent-1' }
    tools {
        nodejs "NodeJS-20.19.0"
    }
    environment {
        NODE_VERSION = '20.19.0'  // Set Node.js version (adjust as needed) 
    }
      
   

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/DevKrishna009/Angular-sakai-v19.git'
            }
        }

        stage('Setup Node.js') {
            steps {
                script {
                    def nodeHome = tool name: "NodeJS-${NODE_VERSION}", type: 'jenkins.plugins.nodejs.tools.NodeJSInstallation'
                    env.PATH = "${nodeHome}/bin:${env.PATH}"
                }
            }
        }

        stage('Backup Old Files') {
                steps {
                    script {
                        def date = new Date().format('yyyy-MM-dd')
                        def backupDir = "C:\\angular-backup\\backup-${date}"
                        bat """
                            echo Creating backup directory...
                            mkdir "${backupDir}"
    
                            echo Copying existing files to backup...
                            xcopy /E /H /C /I /Y "C:\\inetpub\\wwwroot\\SAKAI\\*" "${backupDir}\\"
                        """
                    }
                }
            }

         stage('Install Dependencies') {
            steps {
                bat 'npm install'
            }
        }

         stage('Build Angular Project') {
				steps {
					bat 'npm run build'
				}
    		}

        stage('Deploy to IIS') {
			steps {
				script {
					bat '''
						echo Copying new build files...
						xcopy /E /H /C /I /Y "C:\\data\\agent1\\workspace\\Angular-sakai-v19\\dist\\sakai-ng\\browser\\*" "C:\\inetpub\\wwwroot\\SAKAI\\"

						echo Restarting IIS...
						powershell -Command "Start-Process PowerShell -ArgumentList \\"iisreset /restart\\" -Verb RunAs"
					'''
				}
			}
		}
}	 
    

    post {
        success {
            echo "Deployment successful!"
        }
        failure {
            echo "Deployment failed!"
        }
    }
}
